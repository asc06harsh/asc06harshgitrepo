{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_15_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_15_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Invalid email format.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, LoginComponent_div_15_small_1_Template, 2, 0, \"small\", 14);\n    i0.ɵɵtemplate(2, LoginComponent_div_15_small_2_Template, 2, 0, \"small\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.email.errors == null ? null : ctx_r0.f.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.email.errors == null ? null : ctx_r0.f.email.errors.email);\n  }\n}\nfunction LoginComponent_div_21_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_21_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" Password must be at least 6 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, LoginComponent_div_21_small_1_Template, 2, 0, \"small\", 14);\n    i0.ɵɵtemplate(2, LoginComponent_div_21_small_2_Template, 2, 0, \"small\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.password.errors == null ? null : ctx_r1.f.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.password.errors == null ? null : ctx_r1.f.password.errors.minlength);\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder, http, router) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  logIn() {\n    if (this.loginForm.invalid) {\n      // Mark all fields as touched to show validation errors\n      this.loginForm.markAllAsTouched();\n      return;\n    }\n    this.http.get('http://localhost:3000/signup').subscribe(res => {\n      const user = res.find(a => {\n        return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password;\n      });\n      if (user) {\n        alert(user.name + ' logged in successfully');\n        this.router.navigate(['/restaurant']);\n        this.loginForm.reset();\n      } else {\n        alert('Invalid credentials');\n      }\n    }, err => {\n      console.log(err);\n    });\n  }\n  // Helper getter to access form controls in the template\n  get f() {\n    return this.loginForm.controls;\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 26,\n  vars: 3,\n  consts: [[1, \"container\", \"background-image\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"exampleInputEmail1\", \"placeholder\", \"Email address\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"exampleInputPassword1\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"routerLink\", \"/signup\", 2, \"color\", \"blue\", \"margin-top\", \"10px\"], [1, \"text-danger\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h1\");\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"h5\");\n      i0.ɵɵtext(8, \"You can login here!\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.logIn();\n      });\n      i0.ɵɵelementStart(10, \"div\", 6)(11, \"label\", 7)(12, \"strong\");\n      i0.ɵɵtext(13, \"Email Address\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(14, \"input\", 8);\n      i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 3, 2, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 6)(17, \"label\", 7)(18, \"strong\");\n      i0.ɵɵtext(19, \"Password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(20, \"input\", 10);\n      i0.ɵɵtemplate(21, LoginComponent_div_21_Template, 3, 2, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 11);\n      i0.ɵɵtext(23, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"a\", 12);\n      i0.ɵɵtext(25, \"New User? Click to Sign up\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.f.email.touched && ctx.f.email.invalid);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.f.password.touched && ctx.f.password.invalid);\n    }\n  },\n  dependencies: [i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".card[_ngcontent-%COMP%]{\\n    position: relative;\\n    left: 50%;\\n    margin-top: 5%;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    padding: 55px;\\n    background-color: #fff;\\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.377);\\n    opacity:0.8;\\n\\n}\\n.background-image[_ngcontent-%COMP%] {\\n    background-image: url('background_loginpage.jpg');\\n    background-size: cover;\\n    background-position: center;\\n    min-height: 100vh;\\n    min-width: 200vh;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsY0FBYztJQUNkLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qiw0Q0FBNEM7SUFDNUMsV0FBVzs7QUFFZjtBQUNBO0lBQ0ksaURBQWlMO0lBQ2pMLHNCQUFzQjtJQUN0QiwyQkFBMkI7SUFDM0IsaUJBQWlCO0lBQ2pCLGdCQUFnQjtBQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJke1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWFyZ2luLXRvcDogNSU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgcGFkZGluZzogNTVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IHJnYmEoMCwgMCwgMCwgMC4zNzcpO1xuICAgIG9wYWNpdHk6MC44O1xuXG59XG4uYmFja2dyb3VuZC1pbWFnZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdDOlxcVXNlcnNcXGhhcnNoLmdhZGVcXE9uZURyaXZlIC0gYXNjZW5kaW9uXFxEZXNrdG9wXFxUUkFJTklOR1xcUmVzdGF1cmVudF9NYW5hZ2VtZW50XFxSZXN0YXVyZW50X0FwcGxpY2F0aW9uLW15LW5ldy1icmFuY2hcXHNyY1xcYXNzZXRzXFxiYWNrZ3JvdW5kX2xvZ2lucGFnZS5qcGcnKTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgICBtaW4td2lkdGg6IDIwMHZoO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_15_small_1_Template","LoginComponent_div_15_small_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","f","email","errors","required","LoginComponent_div_21_small_1_Template","LoginComponent_div_21_small_2_Template","ctx_r1","password","minlength","LoginComponent","constructor","formBuilder","http","router","ngOnInit","loginForm","group","minLength","logIn","invalid","markAllAsTouched","get","subscribe","res","user","find","a","value","alert","name","navigate","reset","err","console","log","controls","ɵɵdirectiveInject","i1","UntypedFormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_9_listener","ɵɵelement","LoginComponent_div_15_Template","LoginComponent_div_21_Template","touched"],"sources":["C:\\Users\\harsh.gade\\OneDrive - ascendion\\Desktop\\TRAINING\\Restaurent_Management\\Restaurent_Application-my-new-branch\\src\\app\\login\\login.component.ts","C:\\Users\\harsh.gade\\OneDrive - ascendion\\Desktop\\TRAINING\\Restaurent_Management\\Restaurent_Application-my-new-branch\\src\\app\\login\\login.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: UntypedFormGroup;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  logIn() {\n    if (this.loginForm.invalid) {\n      // Mark all fields as touched to show validation errors\n      this.loginForm.markAllAsTouched();\n      return;\n    }\n\n    this.http.get<any>('http://localhost:3000/signup').subscribe(\n      (res) => {\n        const user = res.find((a: any) => {\n          return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password;\n        });\n        if (user) {\n          alert(user.name + ' logged in successfully');\n          this.router.navigate(['/restaurant']);\n          this.loginForm.reset();\n        } else {\n          alert('Invalid credentials');\n        }\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  // Helper getter to access form controls in the template\n  get f() {\n    return this.loginForm.controls;\n  }\n}\n","<div class=\"container background-image\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"card\">\n        <div class=\"text-center\">\n          <h1>Login</h1>\n          <h5>You can login here!</h5>\n        </div>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"logIn()\">\n          <div class=\"mb-3\">\n            <label class=\"form-label\"><strong>Email Address</strong></label>\n            <input\n              formControlName=\"email\"\n              type=\"email\"\n              class=\"form-control\"\n              id=\"exampleInputEmail1\"\n              placeholder=\"Email address\"\n            />\n            <div *ngIf=\"f.email.touched && f.email.invalid\" class=\"text-danger\">\n              <small *ngIf=\"f.email.errors?.required\">Email is required.</small>\n              <small *ngIf=\"f.email.errors?.email\">Invalid email format.</small>\n            </div>\n          </div>\n          <div class=\"mb-3\">\n            <label class=\"form-label\"><strong>Password</strong></label>\n            <input\n              formControlName=\"password\"\n              type=\"password\"\n              class=\"form-control\"\n              id=\"exampleInputPassword1\"\n            />\n            <div *ngIf=\"f.password.touched && f.password.invalid\" class=\"text-danger\">\n              <small *ngIf=\"f.password.errors?.required\">Password is required.</small>\n              <small *ngIf=\"f.password.errors?.minlength\">\n                Password must be at least 6 characters.\n              </small>\n            </div>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n        </form>\n        <a style=\"color: blue; margin-top: 10px;\" routerLink=\"/signup\">New User? Click to Sign up</a>\n      </div>\n    </div>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}