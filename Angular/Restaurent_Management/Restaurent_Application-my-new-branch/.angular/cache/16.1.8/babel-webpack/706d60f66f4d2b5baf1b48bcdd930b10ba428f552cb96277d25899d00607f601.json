{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(formBuilder, http, router) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  logIn() {\n    if (this.loginForm.invalid) {\n      // Mark all fields as touched to show validation errors\n      this.loginForm.markAllAsTouched();\n      return;\n    }\n    this.http.get('http://localhost:3000/signup').subscribe(res => {\n      const user = res.find(a => {\n        return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password;\n      });\n      if (user) {\n        alert(user.name + ' logged in successfully');\n        this.router.navigate(['/restaurant']);\n        this.loginForm.reset();\n      } else {\n        alert('Invalid credentials');\n      }\n    }, err => {\n      console.log(err);\n    });\n  }\n  // Helper getter to access form controls in the template\n  get f() {\n    return this.loginForm.controls;\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 24,\n  vars: 1,\n  consts: [[1, \"container\", \"background-image\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"exampleInputEmail1\", \"placeholder\", \"Email address\", 1, \"form-control\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"exampleInputPassword1\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"routerLink\", \"/signup\", 2, \"color\", \"blue\", \"margin-top\", \"10px\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h1\");\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"h5\");\n      i0.ɵɵtext(8, \"You can login here!\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.logIn();\n      });\n      i0.ɵɵelementStart(10, \"div\", 6)(11, \"label\", 7)(12, \"strong\");\n      i0.ɵɵtext(13, \"Email Address\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(14, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 6)(16, \"label\", 7)(17, \"strong\");\n      i0.ɵɵtext(18, \"Password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(19, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 10);\n      i0.ɵɵtext(21, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"a\", 11);\n      i0.ɵɵtext(23, \"New User? Click to Sign up\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".card[_ngcontent-%COMP%]{\\n    position: relative;\\n    left: 50%;\\n    margin-top: 5%;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    padding: 55px;\\n    background-color: #fff;\\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.377);\\n    opacity:0.8;\\n\\n}\\n.background-image[_ngcontent-%COMP%] {\\n    background-image: url('background_loginpage.jpg');\\n    background-size: cover;\\n    background-position: center;\\n    min-height: 100vh;\\n    min-width: 200vh;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsY0FBYztJQUNkLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qiw0Q0FBNEM7SUFDNUMsV0FBVzs7QUFFZjtBQUNBO0lBQ0ksaURBQWlMO0lBQ2pMLHNCQUFzQjtJQUN0QiwyQkFBMkI7SUFDM0IsaUJBQWlCO0lBQ2pCLGdCQUFnQjtBQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJke1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWFyZ2luLXRvcDogNSU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgcGFkZGluZzogNTVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IHJnYmEoMCwgMCwgMCwgMC4zNzcpO1xuICAgIG9wYWNpdHk6MC44O1xuXG59XG4uYmFja2dyb3VuZC1pbWFnZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdDOlxcVXNlcnNcXGhhcnNoLmdhZGVcXE9uZURyaXZlIC0gYXNjZW5kaW9uXFxEZXNrdG9wXFxUUkFJTklOR1xcUmVzdGF1cmVudF9NYW5hZ2VtZW50XFxSZXN0YXVyZW50X0FwcGxpY2F0aW9uLW15LW5ldy1icmFuY2hcXHNyY1xcYXNzZXRzXFxiYWNrZ3JvdW5kX2xvZ2lucGFnZS5qcGcnKTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgICBtaW4td2lkdGg6IDIwMHZoO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","LoginComponent","constructor","formBuilder","http","router","ngOnInit","loginForm","group","email","required","password","minLength","logIn","invalid","markAllAsTouched","get","subscribe","res","user","find","a","value","alert","name","navigate","reset","err","console","log","f","controls","i0","ɵɵdirectiveInject","i1","UntypedFormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_9_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\harsh.gade\\OneDrive - ascendion\\Desktop\\TRAINING\\Restaurent_Management\\Restaurent_Application-my-new-branch\\src\\app\\login\\login.component.ts","C:\\Users\\harsh.gade\\OneDrive - ascendion\\Desktop\\TRAINING\\Restaurent_Management\\Restaurent_Application-my-new-branch\\src\\app\\login\\login.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: UntypedFormGroup;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  logIn() {\n    if (this.loginForm.invalid) {\n      // Mark all fields as touched to show validation errors\n      this.loginForm.markAllAsTouched();\n      return;\n    }\n\n    this.http.get<any>('http://localhost:3000/signup').subscribe(\n      (res) => {\n        const user = res.find((a: any) => {\n          return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password;\n        });\n        if (user) {\n          alert(user.name + ' logged in successfully');\n          this.router.navigate(['/restaurant']);\n          this.loginForm.reset();\n        } else {\n          alert('Invalid credentials');\n        }\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  // Helper getter to access form controls in the template\n  get f() {\n    return this.loginForm.controls;\n  }\n}\n","\n<div class=\"container background-image\" >\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <div class=\"card\">\n                <div class=\"text-center\">\n                    <h1>Login</h1>\n                    <h5>You can login here!</h5>\n                </div>\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"logIn()\"> \n                    <div class=\"mb-3\">\n                      <label class=\"form-label\" ><strong>Email Address</strong> </label>\n                      <input formControlName=\"email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Email address\">\n                    </div>\n                    <div class=\"mb-3\">\n                      <label class=\"form-label\"><strong>Password</strong></label>\n                      <input  formControlName=\"password\"  type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n                  </form>\n                  <a style=\"color: blue; margin-top: 10px;\" routerLink=\"/signup\">New User? Click to Sign up</a>\n\n            </div>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}